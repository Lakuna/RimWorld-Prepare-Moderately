Instructions (46): [
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: System.Collections.Generic.List`1[Verse.Pawn] get_StartingAndOptionalPawns()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldarg.0
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: callvirt
		Operand: Verse.Pawn get_Item(Int32)
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: stloc.0
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.0
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: Void TryDestroyStartingColonistFamily(Verse.Pawn)
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.0
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldfld
		Operand: RimWorld.Pawn_RelationsTracker relations
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: callvirt
		Operand: Void ClearAllRelations()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.0
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: Void RemoveComponentsOnDespawned(Verse.Pawn)
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: RimWorld.Planet.WorldPawns get_WorldPawns()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.0
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldc.i4.2
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: callvirt
		Operand: Void PassToWorld(Verse.Pawn, RimWorld.Planet.PawnDiscardDecideMode)
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: System.Collections.Generic.List`1[Verse.Pawn] get_StartingAndOptionalPawns()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldarg.0
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldnull
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: callvirt
		Operand: Void set_Item(Int32, Verse.Pawn)
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldc.i4.0
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: stloc.2
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: br.s
		Operand: System.Reflection.Emit.Label
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: System.Collections.Generic.List`1[Verse.Pawn] get_StartingAndOptionalPawns()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.2
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: callvirt
		Operand: Verse.Pawn get_Item(Int32)
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: brfalse.s
		Operand: System.Reflection.Emit.Label
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: System.Collections.Generic.List`1[Verse.Pawn] get_StartingAndOptionalPawns()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.2
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: callvirt
		Operand: Verse.Pawn get_Item(Int32)
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: Void TryDestroyStartingColonistFamily(Verse.Pawn)
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.2
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldc.i4.1
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: add
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: stloc.2
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.2
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: System.Collections.Generic.List`1[Verse.Pawn] get_StartingAndOptionalPawns()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: callvirt
		Operand: Int32 get_Count()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: blt.s
		Operand: System.Reflection.Emit.Label
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: Verse.Pawn NewGeneratedStartingPawn()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: stloc.1
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: call
		Operand: System.Collections.Generic.List`1[Verse.Pawn] get_StartingAndOptionalPawns()
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldarg.0
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.1
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: callvirt
		Operand: Void set_Item(Int32, Verse.Pawn)
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ldloc.1
		Operand: 
	}
	{
		Labels: System.Collections.Generic.List`1[System.Reflection.Emit.Label]
		OpCode: ret
		Operand: 
	}
]
Verse.Log:Message(String, Boolean)
PrepareThoughtlessly.<Transpiler>d__0:MoveNext()
System.Collections.Generic.List`1:.ctor(IEnumerable`1)
System.Linq.Enumerable:ToList(IEnumerable`1)
HarmonyLib.CodeTranspiler:GetResult(ILGenerator, MethodBase)
HarmonyLib.MethodBodyReader:FinalizeILCodes(Emitter, List`1, List`1, Boolean&)
HarmonyLib.MethodCopier:Finalize(Emitter, List`1, Boolean&)
HarmonyLib.MethodPatcher:CreateReplacement(Dictionary`2&)
HarmonyLib.PatchFunctions:UpdateWrapper(MethodBase, PatchInfo)
HarmonyLib.PatchClassProcessor:ProcessPatchJob(Job)
HarmonyLib.PatchClassProcessor:PatchWithAttributes(MethodBase&)
HarmonyLib.PatchClassProcessor:Patch()
HarmonyLib.Harmony:<PatchAll>b__10_0(Type)
HarmonyLib.CollectionExtensions:Do(IEnumerable`1, Action`1)
HarmonyLib.Harmony:PatchAll(Assembly)
PrepareThoughtlessly.PrepareThoughtlessly:.cctor()
System.Runtime.CompilerServices.RuntimeHelpers:RunClassConstructor(IntPtr)
System.Runtime.CompilerServices.RuntimeHelpers:RunClassConstructor(RuntimeTypeHandle)
Verse.StaticConstructorOnStartupUtility:CallAll()
Verse.<>c:<DoPlayLoad>b__4_2()
Verse.LongEventHandler:ExecuteToExecuteWhenFinished()
Verse.LongEventHandler:UpdateCurrentAsynchronousEvent()
Verse.LongEventHandler:LongEventsUpdate(Boolean&)
Verse.Root:Update()
Verse.Root_Entry:Update()
